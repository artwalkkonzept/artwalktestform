{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","genre","year","artwalks","setArtwalks","artwalk","setArtwalk","handleChange","e","target","name","value","prevInput","useEffect","fetch","then","res","ok","json","jsonRes","className","onChange","onClick","preventDefault","alert","newArtwalk","axios","post","map","id","_id","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAmFeA,MA9Ef,WAAgB,IAAD,EACmBC,mBAAS,CACvC,CACEC,MAAO,GACPC,MAAO,GACPC,KAAM,MALG,mBACNC,EADM,KACIC,EADJ,OASiBL,mBAC5B,CACEC,MAAO,GACPC,MAAO,GACPC,KAAM,KAbG,mBASNG,EATM,KASGC,EATH,KAyBb,SAASC,EAAaC,GAAI,IAAD,EACDA,EAAEC,OAAjBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACbL,GAAW,SAAAM,GACT,kCAEOA,GAFP,kBAGKF,EAAOC,OAuBhB,OArCAE,qBAAU,WACRC,MAAM,aAAaC,MAAK,SAAAC,GACtB,GAAGA,EAAIC,GACL,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAAO,OAAIf,EAAYe,SAiC/B,sBAAKC,UAAU,MAAf,UACE,6CACA,iCACE,uBAAOC,SAAUd,EAAcG,KAAK,QAAQC,MAAON,EAAQL,QAC3D,uBAAOqB,SAAUd,EAAcG,KAAK,QAAQC,MAAON,EAAQJ,QAC3D,uBAAOoB,SAAUd,EAAcG,KAAK,OAAOC,MAAON,EAAQH,OAC1D,wBAAQoB,QAxBd,SAAoBd,GAClBA,EAAEe,iBACFC,MAAM,iBACN,IAAMC,EAAa,CACjBzB,MAAOK,EAAQL,MACfC,MAAOI,EAAQJ,MACfC,KAAMG,EAAQH,MAGhBwB,IAAMC,KAAK,cAAeF,IAetB,4BAGDtB,EAASyB,KAAI,SAAAvB,GACZ,OACE,gCACE,6BAAKA,EAAQL,QACb,4BAAIK,EAAQJ,QACZ,4BAAII,EAAQH,OACZ,wBAAQoB,QAAS,kBArBJO,EAqBwBxB,EAAQyB,IApBrDJ,IAAMK,OAAO,WAAaF,QAC1BL,MAAM,mBAFR,IAAuBK,GAqBb,8BC/DGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.30bf99a7.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n  const [artwalks, setArtwalks] = useState([\n    {\n      title: '',\n      genre: '',\n      year: ''\n    }\n  ])\n\n  const [artwalk, setArtwalk] = useState(\n    {\n      title: '',\n      genre: '',\n      year: ''\n    }\n  )\n\n  useEffect(() => {\n    fetch('/artwalks').then(res => {\n      if(res.ok) {\n        return res.json()\n      }\n    }).then(jsonRes => setArtwalks(jsonRes))\n  })\n\n  function handleChange(e) {\n    const {name, value} = e.target;\n    setArtwalk(prevInput => {\n      return(\n        {\n          ...prevInput,\n          [name]: value\n        }\n      )\n    })\n  }\n\n  function addArtwalk(e) {\n    e.preventDefault();\n    alert(\"artwalk added\");\n    const newArtwalk = {\n      title: artwalk.title,\n      genre: artwalk.genre,\n      year: artwalk.year\n    }\n\n    axios.post('/newartwalk', newArtwalk);\n  }\n\n  function deleteArtwalk(id) {\n    axios.delete('/delete/' + id);\n    alert(\"artwalk deleted\");\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add Artwalk</h1>\n      <form>\n        <input onChange={handleChange} name=\"title\" value={artwalk.title}></input>\n        <input onChange={handleChange} name=\"genre\" value={artwalk.genre}></input>\n        <input onChange={handleChange} name=\"year\" value={artwalk.year}></input>\n        <button onClick={addArtwalk}>Add artwalk</button>\n      </form>\n\n      {artwalks.map(artwalk => {\n        return (\n          <div>\n            <h1>{artwalk.title}</h1>\n            <p>{artwalk.genre}</p>\n            <p>{artwalk.year}</p>\n            <button onClick={() => deleteArtwalk(artwalk._id)}>DELETE</button>\n          </div>\n        ) \n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}