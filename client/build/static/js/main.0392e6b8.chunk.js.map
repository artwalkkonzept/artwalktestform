{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","description","artwalks","setArtwalks","artwalk","setArtwalk","Date","value","onChange","handleChange","e","target","name","prevInput","useEffect","fetch","then","res","ok","json","jsonRes","className","id","onClick","preventDefault","newArtwalk","axios","post","map","class","_id","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA6FeA,MAnFf,WAAgB,IAAD,EACmBC,mBAAS,CACvC,CACEC,MAAO,GACPC,YAAa,MAJJ,mBACNC,EADM,KACIC,EADJ,OAQiBJ,mBAC5B,CACEC,MAAO,GACPC,YAAa,KAXJ,mBAQNG,EARM,KAQGC,EARH,OAeaN,mBAAS,IAAIO,MAf1B,mBAeNC,EAfM,KAeCC,EAfD,KA0Bb,SAASC,EAAaC,GAAI,IAAD,EACDA,EAAEC,OAAjBC,EADgB,EAChBA,KAAML,EADU,EACVA,MACbF,GAAW,SAAAQ,GACT,kCAEOA,GAFP,kBAGKD,EAAOL,OAoBhB,OAlCAO,qBAAU,WACRC,MAAM,aAAaC,MAAK,SAAAC,GACtB,GAAGA,EAAIC,GACL,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAAO,OAAIjB,EAAYiB,SA8B/B,sBAAKC,UAAU,MAAf,UACE,6CACA,uBAAMA,UAAU,WAAhB,UACE,sCAAY,uBAAOC,GAAG,QAAQd,SAAUC,EAAcG,KAAK,QAAQL,MAAOH,EAAQJ,QAClF,4CAAkB,uBAAOsB,GAAG,cAAcd,SAAUC,EAAcG,KAAK,cAAcL,MAAOH,EAAQH,cACpG,wBAAQsB,QApBd,SAAoBb,GAClBA,EAAEc,iBACF,IAAMC,EAAa,CACjBzB,MAAOI,EAAQJ,MACfC,YAAaG,EAAQH,aAGvByB,IAAMC,KAAK,cAAeF,IAatB,4BAGDvB,EAAS0B,KAAI,SAAAxB,GACZ,OACE,sBAAKiB,UAAU,WAAf,UACE,0CACA,oBAAIA,UAAU,UAAd,SAAyBjB,EAAQJ,QACjC,mBAAGqB,UAAU,eAAb,SAA6BjB,EAAQH,cAE3C,8BACE,cAAC,IAAD,CACEO,SAAUA,EACVD,MAAOA,MAIL,wBAAQsB,MAAM,kBAAkBN,QAAS,kBA3B5BD,EA2BgDlB,EAAQ0B,SA1B7EJ,IAAMK,OAAO,WAAaT,GAD5B,IAAuBA,GA2Bb,8BCzEGU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0392e6b8.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n//import logo from './logo.svg';\nimport axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './App.css';\n\n\nimport DateTimePicker from 'react-datetime-picker';\n\nfunction App() {\n  const [artwalks, setArtwalks] = useState([\n    {\n      title: '',\n      description: ''\n    }\n  ])\n\n  const [artwalk, setArtwalk] = useState(\n    {\n      title: '',\n      description: ''\n    }\n  )\n\n  const [value, onChange] = useState(new Date())\n  \n    \n  useEffect(() => {\n    fetch('/artwalks').then(res => {\n      if(res.ok) {\n        return res.json()\n      }\n    }).then(jsonRes => setArtwalks(jsonRes))\n  })\n\n  function handleChange(e) {\n    const {name, value} = e.target;\n    setArtwalk(prevInput => {\n      return(\n        {\n          ...prevInput,\n          [name]: value\n        }\n      )\n    })\n  }\n\n  function addArtwalk(e) {\n    e.preventDefault();\n    const newArtwalk = {\n      title: artwalk.title,\n      description: artwalk.description\n    }\n\n    axios.post('/newartwalk', newArtwalk);\n  }\n\n  function deleteArtwalk(id) {\n    axios.delete('/delete/' + id);\n  }\n\n  return (\n    <div className=\"App\">\n      <h3>Add Artwalk</h3>\n      <form className=\"formPost\">\n        <p>Title</p><input id=\"Title\" onChange={handleChange} name=\"title\" value={artwalk.title}></input>\n        <p>Description</p><input id=\"Description\" onChange={handleChange} name=\"description\" value={artwalk.description}></input>\n        <button onClick={addArtwalk}>Add artwalk</button>\n      </form>\n\n      {artwalks.map(artwalk => {\n        return (\n          <div className=\"formPost\">\n            <h1>Artwalks</h1>\n            <h1 className=\"h1Title\">{artwalk.title}</h1>\n            <p className=\"pDescription\">{artwalk.description}</p>\n            \n      <div>\n        <DateTimePicker\n          onChange={onChange}\n          value={value}\n        />\n      </div>\n\n            <button class=\"btn btn-primary\" onClick={() => deleteArtwalk(artwalk._id)}>Delete</button>\n          </div>\n        ) \n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}