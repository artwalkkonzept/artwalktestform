{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/admin/Desktop/my-mern-form/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n  _s();\n\n  const [artwalks, setArtwalks] = useState([{\n    title: '',\n    genre: '',\n    year: ''\n  }]);\n  const [artwalk, setArtwalk] = useState({\n    title: '',\n    genre: '',\n    year: ''\n  });\n  useEffect(() => {\n    fetch('/artwalks').then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setArtwalks(jsonRes));\n  });\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setArtwalk(prevInput => {\n      return { ...prevInput,\n        [name]: value\n      };\n    });\n  }\n\n  function addArtwalk(e) {\n    e.preventDefault();\n    alert(\"artwalk added\");\n    const newrtwalk = {\n      title: artwalk.title,\n      genre: artwalk.genre,\n      year: artwalk.year\n    };\n    axios.post('/newartwalk', newArtwalk);\n  }\n\n  function deleteArtwalk(id) {\n    axios.delete('/delete/' + id);\n    alert(\"artwalk deleted\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Artwalk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"title\",\n        value: artwalk.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"genre\",\n        value: artwalk.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"year\",\n        value: artwalk.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addArtwalk,\n        children: \"Add artwalk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), artwalks.map(artwalk => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: artwalk.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artwalk.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artwalk.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteArtwalk(artwalk._id),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SdFVyPf8UO7v3SC9JzSyxPlydw8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Desktop/my-mern-form/client/src/App.js"],"names":["useState","useEffect","axios","App","artwalks","setArtwalks","title","genre","year","artwalk","setArtwalk","fetch","then","res","ok","json","jsonRes","handleChange","e","name","value","target","prevInput","addArtwalk","preventDefault","alert","newrtwalk","post","newArtwalk","deleteArtwalk","id","delete","map","_id"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n  const [artwalks, setArtwalks] = useState([\n    {\n      title: '',\n      genre: '',\n      year: ''\n    }\n  ])\n\n  const [artwalk, setArtwalk] = useState(\n    {\n      title: '',\n      genre: '',\n      year: ''\n    }\n  )\n\n  useEffect(() => {\n    fetch('/artwalks').then(res => {\n      if(res.ok) {\n        return res.json()\n      }\n    }).then(jsonRes => setArtwalks(jsonRes))\n  })\n\n  function handleChange(e) {\n    const {name, value} = e.target;\n    setArtwalk(prevInput => {\n      return(\n        {\n          ...prevInput,\n          [name]: value\n        }\n      )\n    })\n  }\n\n  function addArtwalk(e) {\n    e.preventDefault();\n    alert(\"artwalk added\");\n    const newrtwalk = {\n      title: artwalk.title,\n      genre: artwalk.genre,\n      year: artwalk.year\n    }\n\n    axios.post('/newartwalk', newArtwalk);\n  }\n\n  function deleteArtwalk(id) {\n    axios.delete('/delete/' + id);\n    alert(\"artwalk deleted\");\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add Artwalk</h1>\n      <form>\n        <input onChange={handleChange} name=\"title\" value={artwalk.title}></input>\n        <input onChange={handleChange} name=\"genre\" value={artwalk.genre}></input>\n        <input onChange={handleChange} name=\"year\" value={artwalk.year}></input>\n        <button onClick={addArtwalk}>Add artwalk</button>\n      </form>\n\n      {artwalks.map(artwalk => {\n        return (\n          <div>\n            <h1>{artwalk.title}</h1>\n            <p>{artwalk.genre}</p>\n            <p>{artwalk.year}</p>\n            <button onClick={() => deleteArtwalk(artwalk._id)}>DELETE</button>\n          </div>\n        ) \n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}